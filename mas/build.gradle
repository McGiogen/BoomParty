apply plugin: 'java'
apply plugin: 'eclipse' 
apply plugin: 'jacoco'
 
version = "1.0"
sourceCompatibility = "1.8"
sourceSets {
    main {
		java {
			srcDirs = ['src/java','src/asl']
		}
	}
    test {
        java { 
        	srcDirs 'test'   
        }
    }
}

repositories {
    mavenCentral()
    maven {
        url "http://jade.tilab.com/maven/"
    }
}

dependencies {
    implementation 'junit:junit:4.12'
    
    implementation 'net.sf.jason:jason:2.3'
    
    implementation 'com.tilab.jade:jade:4.5.0'
    implementation 'it.unibo.alice.tuprolog:tuprolog:3.3.0'
    
    implementation 'org.apache.logging.log4j:log4j-core:2.11.1'
    implementation 'org.apache.logging.log4j:log4j-api:2.11.1'
    
    // File system
	implementation fileTree(dir: 'lib', include: 'tucson-1.12.jar')
	implementation fileTree(dir: 'lib', include: 't4j-1.1-custom.jar')

}

jar {
    manifest {
        attributes "Class-Path": configurations.compile.collect { "lib/"+it.getName() }.join(' ')
        attributes 'Main-Class': 'Library'
    }
}

test {
	testLogging {
		outputs.upToDateWhen { false }		
		showStandardStreams = true		
		events 'failed' , 'passed' //,  'started', 'skipped', 		
	}
	
	//include '**/TestLed.class'
	include '**/Test*.class'
	test.afterSuite { TestDescriptor suite, TestResult result -> //add closure to be notified
	if( !suite.parent && result.getTestCount() > 0) { //there is at least one test
		long elapsedTestTime = result.getEndTime() - result.getStartTime()
 		System.out.println("""AFTERTEST Elapsed time for execution of ${result.getTestCount()} test(s):  $elapsedTestTime ms""");
	}
	}
}

test.finalizedBy jacocoTestReport

jacocoTestReport {
     reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
} 
